@inject Globals globals;

@section control {
<form>
    <input name="__RequestVerificationToken" type="hidden" id="csrf-token" />
    <div class="r-w-container" id="external-container">
        <div class="r-w-sample-container">
            <ej-sample>
                <bold-report-viewer id="reportviewer" report-service-url="@Globals.SERVICE_URL"
                    report-path="product-line-sales.rdl" toolbar-rendering="onToolbarRendering"
                    tool-bar-item-click="onToolBarItemClick" export-item-click="onExportItemClick"
                    parameter-settings="ViewBag.parameterSettings" />
            </ej-sample>
        </div>
        <div class="r-w-property-container">
            <div id='spinner-container'></div>
            <div class="r-w-property-title" style="visibility: hidden">Parameters</div>
            <div class="r-w-property" style="visibility: hidden">
                <div class="r-w-property-name" id="r-w-property-name-category"> Category</div>
                <div class="r-w-property-value">
                    <input type="text" id="category" />
                </div>
            </div>
            <div class="r-w-property" id="r-w-property-subcategory" style="visibility: hidden">
                <div class="r-w-property-name" id="r-w-property-name-subcategory">
                    Sub Category
                </div>
                <div class="r-w-property-value" id="r-w-property-value-subcategory">
                    <input type="text" id="subcategory" />
                </div>
            </div>
            <div class="r-w-property" id="r-w-property-startdate" style="visibility: hidden">
                <div class="r-w-property-name" id="r-w-property-name-startdate">
                    Start Date
                </div>
                <div class="r-w-property-value" id="r-w-property-value-startdate">
                    <input id="startdate" />
                </div>
            </div>
            <div class="r-w-property" id="r-w-property-enddate" style="visibility: hidden">
                <div class="r-w-property-name" id="r-w-property-name-enddate">
                    End Date
                </div>
                <div class="r-w-property-value">
                    <input id="enddate" />
                </div>
            </div>
                    <input type="button" id="update"
                   class="r-w-genearte e-control e-btn e-lib e-primary" value="View Report" style="visibility: hidden" />
                
        </div>
    </div>
</form>

<script>
    var startDate, endDate, productCategoryList, productSubCategoryList, category, subCategory;
    var userAgent = window.navigator.userAgent;
    var isMobile = /mobile/i.test(userAgent);
    var wheelEvent = 'onwheel' in document.createElement('div') ? 'wheel' : 'mousewheel';
    if (wheelEvent && !isMobile) {
        window.addEventListener(wheelEvent, function () { }, { passive: false });
    }
    ejs.popups.createSpinner({ target: document.getElementById("spinner-container") });
    ejs.popups.showSpinner(document.getElementById("spinner-container"));
    $(function () {
        $.ajax({
            type: "GET",
            contentType: "application/json; charset=utf-8",
            url: location.origin + '@Globals.SERVICE_URL' + '/GetExternalParameterData',
            success: function (data) {
                productCategoryList = JSON.parse(data.productCategoryDetail);
                productSubCategoryList = JSON.parse(data.productSubCategoryDetail);
                var subCategoryDropDownList = productSubCategoryList.filter(({ ProductCategoryID }) => ProductCategoryID == 1);
                    startDate = new ejs.calendars.DatePicker({ value: new Date("1/1/2003"), width: "180px" });
                    endDate = new ejs.calendars.DatePicker({ value: new Date("12/31/2003"), width: "180px" });
                    category = new ejs.dropdowns.DropDownList({
                            dataSource: productCategoryList,
                            fields: {
                                text: "Name",
                                value: "ProductCategoryID",
                            },
                            index: 1,
                            width: "180px",
                            height: "10px",
                            showClearButton: false,
                            change: function(e){
                                var categoryID = e.value;
                                var categoryDropDownList = productSubCategoryList.filter(({ ProductCategoryID }) => ProductCategoryID == categoryID);
                                if(subCategory.value != null)
                                    subCategory.clear();
                                subCategory.dataSource = categoryDropDownList;
                                $('#update').prop('disabled', !subCategory.value);
                            }
                    });
                    subCategory = new ejs.dropdowns.MultiSelect({
                            dataSource: subCategoryDropDownList,
                            fields: {
                                text: "Name",
                                value: "ProductSubcategoryID",
                            },
                            mode: 'CheckBox',
                            showClearButton: true,
                            showDropDownIcon: true,
                            showSelectAll: true,
                            width: "180px",
                            height: "30px",
                            value: [2],
                            placeholder: "Select Option",
                            change: function(args) {
                                $('#update').prop('disabled', !args.value.length);
                            }
                    });
                    startDate.appendTo('#startdate');
                    endDate.appendTo('#enddate');
                    category.appendTo('#category');
                    subCategory.appendTo('#subcategory');
                    ejs.popups.hideSpinner(document.getElementById("spinner-container"));
                    $(".r-w-property-title").css("visibility", "visible");
                    $(".r-w-property").css("visibility", "visible");
                    $(".r-w-genearte").css("visibility", "visible");
                    $("#update").on("click", function () {
                        updateViewer();
                    });
            }
        });
    });
    function updateViewer(){
            var reportViewer = $("#reportviewer").boldReportViewer("instance");
            var productCategory =  category.value.toString();
            var productSubcategory =  (subCategory.value == null ? [''] : subCategory.value.map((i)=>{return i.toString();}));
            var sDate =  startDate.value;
            var eDate =  endDate.value;
            var parameters = [{ name: 'ProductCategory', labels: [productCategory], values: [productCategory] }, { name: 'ProductSubcategory', labels: productSubcategory, values: productSubcategory }, { name: 'StartDate', labels: [sDate], values: [sDate] }, { name: 'EndDate', labels: [eDate], values: [eDate] }];
            reportViewer.model.parameters = parameters;
            reportViewer.reload();
    }

        var token = "@Context.Request.Cookies["CSRF-TOKEN"]";
        document.getElementById('csrf-token').value = token;
</script>
}
@section description {
<div id="description">
    <p>
        The Product Line Sales RDL report represents the best performing sales people and stores using <a
            href="https://help.boldreports.com/enterprise-reporting/designer-guide/report-designer/report-items/tablix/"
            target="_blank" rel="noreferrer">Tablix</a> and <a
            href="https://help.boldreports.com/enterprise-reporting/designer-guide/report-designer/report-items/chart/" target="_blank" rel="noreferrer">Chart</a>
        report items.
    </p>
    <ul>
        <li>
            The sales details are organized by category and sub-category of products using the concept of external
            report parameters which is designed using <a href="https://ej2.syncfusion.com/javascript/documentation/api/drop-down-list"
                target="_blank" rel="noreferrer">ejdropdownlist</a>. It allows users to filter Sub Category based on the selected
            Category.
        </li>
        <li>Non cascading parameters namely start date and end date also used in this report.</li>
    </ul>
    <p>
        More information about handling the report items can be found in this <a
            href="https://help.boldreports.com/embedded-reporting/aspnet-core-reporting/report-designer/designer-guide/report-items/"
            target="_blank" rel="noreferrer">documentation</a> section.
    </p>
</div>
}
